// This #include statement was automatically added by the Particle IDE.
#include <neopixel.h>

// This #include statement was automatically added by the Particle IDE.



#define PIXEL_PIN D2
#define PIXEL_COUNT 3
#define PIXEL_TYPE WS2812B

//type_of_variable variable
Adafruit_NeoPixel strip(PIXEL_COUNT, PIXEL_PIN, PIXEL_TYPE);

//colours   variable with 3 integers (8bytes long)
uint32_t red = strip.Color(255, 0, 0);
uint32_t green = strip.Color(0, 255, 0);
uint32_t blue = strip.Color(0, 0, 255);
uint32_t purple = strip.Color(126, 0, 208);
uint32_t yellow = strip.Color(255, 215, 0);
uint32_t cyan = strip.Color(64, 224, 208);

//LDR light reader
int ulPin = D5;
int ulReading = 0;
int darkThreshold = 30;
int brightThreshold = 60;

//timing
const long readingInterval = 10000;
unsigned long previousMillis = 0;

// servo
int servoPin = D0;
Servo wormServo;
int servoPos = 0;

int pingPin = D5;

void setup() 
{
    strip.begin();
    strip.show();
    
    //servo
    wormServo.attach(D0);
    wormServo.write(0);
    
    //sensor
    Serial.begin(9600);
    
}

void loop() 
{
    //ping distance sensor
    long duration, cm;
    
    pinMode(pingPin, OUTPUT);
    digitalWrite(pingPin, LOW);
    delayMicroseconds(2);
    digitalWrite(pingPin, HIGH);
    delayMicroseconds(5);
    digitalWrite(pingPin, LOW);
    
    pinMode(pingPin, INPUT);
    duration = pulseIn(pingPin, HIGH);
    
    cm = microsecondsToCentimeters(duration);
    Serial.print(cm);
    Serial.print("cm");
    Serial.println();
    
    delay(100);
    
    //ldr reading  
    unsigned long currentMillis = millis();
    
    if(currentMillis - previousMillis > readingInterval)
    {
        previousMillis = currentMillis;
        
        ulReading = analogRead(ulPin);
        // Particle.publish("ul reading", String(ulReading));
        
        if(ulReading < darkThreshold)
        {
            setStripColour(cyan);
            Particle.publish("it's dark", String(ulReading));
            
            wormServo.write(0);
            delay(1000);
        }
        
        else if(ulReading > brightThreshold)
        {
            setStripColour(yellow);
            Particle.publish("it's bright", String(ulReading));
            
            wormServo.write(180);
            delay(1000);
        }
        
        else
        {
            setStripColour(purple);
            Particle.publish("cool", String(ulReading));   
            
            wormServo.write(0);
        }
    }
}

void setStripColour(uint32_t colour)
{
    for (int i = 0; i < PIXEL_COUNT; i++)
    {
        strip.setPixelColor(i, colour);
    }
    strip.show();
}

long microsecondsToCentimeters(long microseconds) 
{
    return microseconds / 29 / 2;
}
